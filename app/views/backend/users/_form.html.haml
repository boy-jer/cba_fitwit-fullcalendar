= simple_form_for [:backend, @user], :wrapper => :inline do |f|
  %fieldset
    = f.input :first_name
    = f.input :last_name
    = f.input :email
    = f.input :roles_mask, collection: [:guest, :confirmed_user, :author, :moderator, :maintainer, :admin].each_with_index{|i,r| [i, r]}, include_blank: false
    = f.input :location_id, collection: Location.all.map{|l| [l.name, l.id]}.push(['none',nil]), include_blank: false
    = f.input :gender, collection: [:male, :female], include_blank: false
    = f.input :occupation
    = f.input :company
    = f.input :street_address1
    = f.input :street_address2
    = f.input :city
    = f.input :us_state, collection: Location::US_STATES, include_blank: false
    = f.input :zip
    = f.input :primary_phone
    = f.input :secondary_phone
    = f.input :emergency_contact_name
    = f.input :emergency_contact_relationship
    = f.input :t_shirt_size, collection: ["Small","Medium","Large"], include_blank: false
    = f.input :weight
    = f.input :height_inches
    = f.input :height_feet, as: :integer
    = f.input :date_of_birth, input_html: { class: 'datetimepicker' }
    = f.input :fitness_level, collection: 1..10
    = f.input :how_did_you_hear_about_us
    = f.input :veteran_status, collection: [:veteran, :supervet, :newbie, :staff], include_blank: false
    = f.input :member, as: :boolean

    - # approvals
    = f.input :has_physician_approval, as: :boolean
    = f.input :has_physician_approval_explanation, as: :text, :input_html => { rows: 3 }
    = f.input :meds_affect_vital_signs, as: :boolean
    = f.input :meds_affect_vital_signs_explanation, as: :text, :input_html => { rows: 3 }

    - # female specific
    = f.input :post_menopausal_female, as: :boolean, default: false
    = f.input :taking_estrogen, as: :boolean, default: false

  .actions
    = f.submit class: "btn primary"
